openapi: 3.0.0
info:
  title: Hux Assessment API
  description: API documentation for the Full Stack Developer assessment at Hux Ventures.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserLogin:
      type: object
      properties:
        email:
          type: string
          example: devlakunle@learnly.com
        password:
          type: string
          example: 1234567890
    UserRegister:
      type: object
      properties:
        username:
          type: string
          example: devkk
        email:
          type: string
          example: devlakunle@learnly.com
        password:
          type: string
          example: 1234567890
    Contact:
      type: object
      properties:
        firstName:
          type: string
          example: Busayo
        lastName:
          type: string
          example: Elegbe
        phoneNumber:
          type: string
          example: 081234545656
    ContactUpdate:
      type: object
      properties:
        firstName:
          type: string
          example: Ayoola
        lastName:
          type: string
          example: Olakunle
        phoneNumber:
          type: string
          example: 081419419419

security:
  - bearerAuth: []

paths:
  /api/auth/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: Successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

  /api/contacts:
    get:
      summary: Get all contacts for the logged-in user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
    post:
      summary: Create a new contact
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '201':
          description: Successfully created contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'

  /api/contacts/{id}:
    put:
      summary: Update an existing contact
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Contact ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUpdate'
      responses:
        '200':
          description: Successfully updated contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
    delete:
      summary: Delete an existing contact
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Contact ID
      responses:
        '200':
          description: Successfully deleted contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Contact removed
